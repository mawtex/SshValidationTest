@inherits RazorFunction
@using System.Text.RegularExpressions
@using Composite.Core.WebClient.Renderings.Page
@functions {
	public override string FunctionDescription
	{
		get { return "Plays a YouTube video on your page using the specified URL."; }
	}

	[FunctionParameter(Label = "YouTube URL", Help = "Paste the URL to the video you wish to show.")]
	public string YouTubeURL { get; set; }

	private const string aspectRatioWidgetMarkup = @" <f:widgetfunction xmlns:f='http://www.composite.net/ns/function/1.0' name='Composite.Widgets.String.Selector'>
  <f:param name='Options'>
   <f:function name='Composite.Utils.String.Split'>
    <f:param name='String' value='16:9,4:3' />
   </f:function>
  </f:param>
 </f:widgetfunction>";
	[FunctionParameter(Label = "Aspect Ratio", Help = "16:9 aspect ratio by default", WidgetMarkup = aspectRatioWidgetMarkup, DefaultValue = "16:9")]
	public string AspectRatio { get; set; }
}
@{
	string pattern = @"(?:https?:\/\/)?(?:www\.)?(?:(?:(?:youtube.com\/watch\?[^?]*v=|youtu.be\/|youtube.com\/v\/)([\w\-]+))(?:[^\s?]+)?)";
	if (!Regex.IsMatch(YouTubeURL, pattern))
	{
		<div class="alert alert-danger">Wrong Youtube URL.</div>
		return;
	}
	var match = Regex.Match(YouTubeURL, pattern);
	var videoId = match.Groups[1].Value;
}

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
	@if (PageRenderer.RenderingReason == RenderingReason.ScreenshotGeneration)
	{
		<style type="text/css">
			.screenshot {
				position: relative;
				width: 480px;
			}

				.screenshot div {
					position: absolute;
					left: 50%;
					top: 50%;
					width: 68px;
					height: 48px;
					margin-left: -34px;
					margin-top: -24px;
				}
		</style>
	}
</head>
<body>
	@if (PageRenderer.RenderingReason == RenderingReason.ScreenshotGeneration)
	{
		<div class="screenshot">
			<div>
				<svg height="100%" version="1.1" viewBox="0 0 68 48" width="100%"><path class="ytp-large-play-button-bg" d="m .66,37.62 c 0,0 .66,4.70 2.70,6.77 2.58,2.71 5.98,2.63 7.49,2.91 5.43,.52 23.10,.68 23.12,.68 .00,-1.3e-5 14.29,-0.02 23.81,-0.71 1.32,-0.15 4.22,-0.17 6.81,-2.89 2.03,-2.07 2.70,-6.77 2.70,-6.77 0,0 .67,-5.52 .67,-11.04 l 0,-5.17 c 0,-5.52 -0.67,-11.04 -0.67,-11.04 0,0 -0.66,-4.70 -2.70,-6.77 C 62.03,.86 59.13,.84 57.80,.69 48.28,0 34.00,0 34.00,0 33.97,0 19.69,0 10.18,.69 8.85,.84 5.95,.86 3.36,3.58 1.32,5.65 .66,10.35 .66,10.35 c 0,0 -0.55,4.50 -0.66,9.45 l 0,8.36 c .10,4.94 .66,9.45 .66,9.45 z" fill="#1f1f1e" fill-opacity="0.81"></path><path d="m 26.96,13.67 18.37,9.62 -18.37,9.55 -0.00,-19.17 z" fill="#fff"></path><path d="M 45.02,23.46 45.32,23.28 26.96,13.67 43.32,24.34 45.02,23.46 z" fill="#ccc"></path></svg>
			</div>
			<img class="img-responsive" src="//img.youtube.com/vi/@(videoId)/0.jpg" alt="img" />
		</div>
	}
	else
	{
		<div class="embed-responsive embed-responsive-@AspectRatio.Replace(":", "by")">
			<iframe class="embed-responsive-item" src="//www.youtube.com/embed/@(videoId)?fs=1"></iframe>
		</div>
	}
</body>
</html>